/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package javaapplication5;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;


/**
 *
 * @author samuel
 */
public class JavaApplication5 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        
        int contador = 0;
        
        // Creacion de Arrays del tipo clase Estudiantes
        Estudiantes[] listaEstudiantes = new Estudiantes[30];
        Estudiantes[] DatosGuardados = new Estudiantes[30];
        
        // creamos y guardamos nuevos objetos del tipo estudiantes en el arreglo de estudiantes
        listaEstudiantes[0] = new Estudiantes("Juan", "Perez", 22, "21001119");
        listaEstudiantes[1] = new Estudiantes("Carlos", "Gutierres", 21, "21001119");
        listaEstudiantes[2] = new Estudiantes("Manuel", "Zelada", 40, "45454356");
        listaEstudiantes[3] = new Estudiantes("Lucia", "Pereira", 32, "3453543");
        listaEstudiantes[4] = new Estudiantes("Paola", "Perez", 33, "443345345");
        listaEstudiantes[5] = new Estudiantes("Sebastian", "Perez", 44, "4554543");
        listaEstudiantes[6] = new Estudiantes("Hola", "Mundo", 44, "4554543");
        
        
        // Se muestran todos los elementos presentes en el arrgleo de estudiantes
        for (int x=0; x < listaEstudiantes.length; x++) {
            // cumple la condicion si el elemento no es igual a nulo o vacio
            if (listaEstudiantes[x] != null) {
                System.out.println(listaEstudiantes[x].nombre + " " + listaEstudiantes[x].apellido);
            }                
        }
        
        // Serializacion Guardado de datos
        // creamos un nuevo objeto el cual nos servira para guardar todos los elementos
        // Datos.txt es el nombre del archivo
        try(ObjectOutputStream escritura=new ObjectOutputStream(new FileOutputStream("Datos.txt"))) {  
            // recorremos la lista de estudiantes
            for (int x=0; x < listaEstudiantes.length; x++) {
                if (listaEstudiantes[x] != null) {
                    
                    // Escribimos en el archivo los datos respectivos
                    escritura.writeObject(listaEstudiantes[x]);
                    System.out.println("Datos cargados correctamente...");
                }                
            }           
            
        // Captura los errores si es que existen    
        } catch (IOException e){
            System.out.println(e.getMessage());
        }
        
        
        
        // Serializacion Lectura del archivo
        try(ObjectInputStream lectura=new ObjectInputStream(new FileInputStream("Datos.txt"))) {
            
            // Recorre todo el documento, linea por linea en busqueda de los datos
            while (true) {
                // leemos las lineas como que si fueran objetos del tipo Estudiantes
                Estudiantes linea=(Estudiantes)lectura.readObject();
                //System.out.println(linea.nombre + " " + linea.apellido + " " + linea.edad + " " + linea.carnet);
                // Guardamos todos los datos de nuestro archivo en un nuevo arreglo
                DatosGuardados[contador] = new Estudiantes(linea.nombre, linea.apellido, linea.edad , linea.carnet);
                contador = contador+1;       
            }
            
        // captura de errores si existieran    
        } catch (ClassNotFoundException e) {           
        } catch (EOFException e) {            
        } catch (IOException e) {           
        }

        
        // Bucle para recorrer el nuevo arreglo con datos
        for (int x=0; x < DatosGuardados.length; x++) {
            if (DatosGuardados[x] != null) {
                System.out.println(DatosGuardados[x].nombre + " " + DatosGuardados[x].apellido);
            }                
        }
        
        // Verificacion que nuestro arreglo si esta guardando los datos
        System.out.println(DatosGuardados[5].apellido + " " + DatosGuardados[5].carnet);
           

        
    }
    
}


// por si solo quieren verificar el codigo
